# Generated by Django 2.2.5 on 2022-03-31 02:00

import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('player_name', models.CharField(max_length=50, verbose_name='player name')),
                ('steam_url', models.CharField(blank=True, max_length=200, null=True, verbose_name='steam id')),
                ('is_show_steam', models.BooleanField(default=False, verbose_name='show steam id')),
                ('origin_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='origin id')),
                ('is_show_origin', models.BooleanField(default=False, verbose_name='show origin id')),
                ('psn_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='PSN id')),
                ('is_show_psn', models.BooleanField(default=False, verbose_name='show psn id')),
                ('switch_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='switch id')),
                ('is_show_switch', models.BooleanField(default=False, verbose_name='show switch id')),
                ('other_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='other id')),
                ('is_show_other', models.BooleanField(default=False, verbose_name='show other id')),
                ('icon', models.ImageField(blank=True, upload_to='user_icon/', verbose_name='icon')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('playfield', models.CharField(blank=True, default='設定なし', max_length=30, null=True, verbose_name='ply_f')),
                ('rank', models.CharField(max_length=30, verbose_name='rank')),
                ('discord_id', models.CharField(blank=True, max_length=100, verbose_name='discord')),
                ('is_show_discord', models.BooleanField(default=False, verbose_name='show discord id')),
                ('comments', models.CharField(blank=True, default='自己紹介はありません', max_length=300, verbose_name='comments')),
                ('character', models.CharField(blank=True, default='設定なし', max_length=2000, null=True, verbose_name='character')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-last_login'],
            },
            managers=[
                ('objects', main.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='apex_recruit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(default=' ', max_length=30)),
                ('comments', models.CharField(default=' ', max_length=500)),
                ('rnk_min', models.CharField(max_length=100)),
                ('rnk_max', models.CharField(max_length=100)),
                ('num', models.CharField(max_length=100)),
                ('per', models.CharField(max_length=100)),
                ('hard', models.CharField(max_length=100)),
                ('vc', models.CharField(default='なし', max_length=100)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 3, 31, 2, 0, 13, 207002))),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 3, 31, 2, 0, 13, 208002))),
                ('comment', models.CharField(max_length=140)),
                ('news', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='main.ThreadModel')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='reportModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=30)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('matters', models.CharField(blank=True, max_length=100)),
                ('not_mischief', models.BooleanField(default=False)),
                ('article_id', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='main.apex_recruit')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='article_comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.CharField(default=' ', max_length=140)),
                ('article', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='main.apex_recruit')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

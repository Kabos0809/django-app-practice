# Generated by Django 3.2.10 on 2022-01-07 08:06

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import main.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='article_form',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(default=' ', max_length=30)),
                ('comments', models.CharField(default=' ', max_length=500)),
                ('rnk_min', models.CharField(max_length=100)),
                ('rnk_max', models.CharField(max_length=100)),
                ('num', models.CharField(max_length=100)),
                ('per', models.CharField(max_length=100)),
                ('hard', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('user_id', models.CharField(max_length=30, unique=True, verbose_name='user_id')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email_address')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('playfield', models.CharField(blank=True, max_length=30, verbose_name='ply_f')),
                ('rank', models.CharField(max_length=30, verbose_name='rank')),
                ('twitter_id', models.CharField(blank=True, max_length=100, verbose_name='twitter id')),
                ('Youtube_url', models.CharField(blank=True, max_length=100, verbose_name='YouTube CHANNEL')),
                ('discord_id', models.CharField(blank=True, max_length=100, verbose_name='discord')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', main.models.MyUserManager()),
            ],
        ),
    ]
